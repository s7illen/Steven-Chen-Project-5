{"version":3,"sources":["image/trumpPlus1.gif","image/trumpPlus2.gif","image/trumpPlus3.gif","image/trumpMinus1.gif","image/trumpMinus2.gif","image/trumpMinus3.gif","firebase.js","dialog.js","ask.js","result.js","status.js","newsValue.js","intro.js","App.js","serviceWorker.js","index.js","image/trump0.gif"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Dialog","this","props","askedQuestion","map","i","question","trumpTalk","Component","Ask","hander","handler","state","userChoice","interestHandler","interest","newsValueHandler","newsValue","interestChangeHandler","setChoice1","selected","setState","q1","setChoice2","q2","setChoice3","q3","display","className","questionDisplay","onClick","Result","resultDisplay","trumpResult","bossResult","Status","interestChange","level","trumpSrc","trump0","trumpMinus1","trumpMinus2","trumpMinus3","trumpPlus1","trumpPlus2","trumpPlus3","src","alt","style","width","JSON","stringify","NewsValue","Intro","hideIt","hidden","App","apiToText","questionList","forEach","api","axios","url","dataType","method","params","reqUrl","xmlToJSON","then","res","data","_embedded","tags","value","displayOrNot","round","console","log","question1","question2","question3","questionSelected","updateAskedHandler","q","updateInterestHandler","ic","n","resultDisplayHandler","r","allQuestions","database","ref","on","response","whateverList","val","choice","shuffledList","x","Math","floor","random","length","push","splice","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9eef59a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trumpPlus1.ff1fb72d.gif\";","module.exports = __webpack_public_path__ + \"static/media/trumpPlus2.15630967.gif\";","module.exports = __webpack_public_path__ + \"static/media/trumpPlus3.3215cfc3.gif\";","module.exports = __webpack_public_path__ + \"static/media/trumpMinus1.a3bd8ef1.gif\";","module.exports = __webpack_public_path__ + \"static/media/trumpMinus2.eb211291.gif\";","module.exports = __webpack_public_path__ + \"static/media/trumpMinus3.a970309f.gif\";","import firebase from 'firebase/app'\nimport \"firebase/database\"\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD-w3DBlvAvvRskQNSF1yoKrrcRN_oTE0w\",\n    authDomain: \"fake-interview.firebaseapp.com\",\n    databaseURL: \"https://fake-interview.firebaseio.com\",\n    projectId: \"fake-interview\",\n    storageBucket: \"fake-interview.appspot.com\",\n    messagingSenderId: \"284782516391\",\n    appId: \"1:284782516391:web:c14c49534de8257f39a382\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React, { Component } from 'react';\n\nclass Dialog extends Component {\n    // constructor() {\n    //     super();\n    //     this.state = {\n    //         quote: [],\n    //         api: [],\n    //     }\n    // }\n\n    // componentDidMount(){\n        \n    // }\n\n    // componentDidUpdate(){\n\n        \n        //this pushes api to the stateapilist, but because using componentDidUpdate, api pushes \n        \n\n        // let apiList = [];\n       \n\n        // if (this.props.askedQuestion.length > 0) {\n        //     this.props.askedQuestion.map((i) => {\n        //         return (\n        //             apiList.push(i.api)\n        //         )\n        //     })\n        // }\n\n        // let apiQuote = 'dsdsdd'; \n\n        // let getApiQuote = (x) => {\n        //     axios({\n        //         url: 'http://proxy.hackeryou.com',\n        //         dataType: 'json',\n        //         method: 'GET',\n        //         params: {\n        //             reqUrl: 'https://api.tronalddump.io/tag/' + x,\n        //             xmlToJSON: false\n        //         }\n        //     }).then((res) => {\n        //         // return res.data._embedded.tags[0].value;\n        //         console.log(res.data._embedded.tags[0].value);\n        //         // apiQuote = res.data._embedded.tags[0].value\n        //         // apiQuote = res.data._embedded.tags[0].value;\n        //         // this.setState({ apiData:res.data._embedded.tags[0].value });\n\n        //         // console.log(apiQuote);\n        //         apiList.push(res.data._embedded.tags[0].value);\n        //     })\n        // }\n\n        // apiList.push(getApiQuote(i.api))\n\n        // if (this.props.askedQuestion.length > 0) {\n        //     this.props.askedQuestion.forEach((i) => {\n        //        apiList.push(i.trumpTalk)\n        //     })\n        // }\n\n        // if (apiList.length !== this.state.api.length) {\n        //     this.setState({ api: apiList })\n        //     console.log(apiList)\n        // }\n\n        // if (this.state.api.length > 0) {\n        //     this.state.api.map((i) => {\n        //         if(i===0){return (quoteList.push(i.api))}\n        //         else{return 0}\n        //     })\n        // }\n\n\n        \n        // console.log(this.state.api)\n\n        // let quoteId = '';\n\n        //     this.props.askedQuestion.map((i) => {\n        //         return (quoteId = i.api)\n        //     }, () => { console.log(quoteId) })\n\n\n\n    // }\n\n\n\n\n\n//this.props.handler(quote)\n\n    //update thequotelist for each question in the askedquestion list\n\n\n    render(){\n        return(\n            <div>\n                <h2>DIALOG</h2>\n                {this.props.askedQuestion.map((i) => {\n                    return (<p>{i.question}</p>)\n                })}\n                {this.props.askedQuestion.map((i) => {\n                    return (<p>{i.trumpTalk}</p>)\n                })}\n            </div>\n        )\n    }\n\n}\n\nexport default Dialog;","import React, { Component } from 'react';\n\n//i tried to use state object from app.js, but it didn't work, you cannot get state value from component other than using hook, which I never learn, I deplyed the hood (use state), it shows something emty, maybe because things rendered before api/backend call, but it shouldn't happen in react because everything should update all the time. if everything failed, try to use prop.\n\n\n// transfer questionChoice arr to this component by using props\n// display firtst three items.question in the arr by creating three buttons\n// whenever user picked a buttons, get another three new items.question from the arr\n\nclass Ask extends Component {\n    constructor() {\n        super();\n        this.state = {\n            userChoice: {},\n            display: true\n        }\n    }\n    \n// !cannot make the setChoice DRY due to fail to grab the value on the button\n\n    // displayOrNot = () => {\n    //     if (this.props.round === 5 || this.props.interest <= 0 ) {\n    //         this.setState({ \n    //             display: false\n    //         });\n    //         this.props.resultDisplayHandler(true);\n    //     }\n    // }\n\n    hander = () => {\n        this.props.handler(this.state.userChoice)\n        this.props.interestHandler(this.state.userChoice.interest);\n        this.props.newsValueHandler(this.state.userChoice.newsValue);\n        this.props.interestChangeHandler(this.state.userChoice.interest);\n    }\n\n    setChoice1 = () => {\n        this.props.selected();\n        this.setState ({\n            userChoice: this.props.q1\n        }, () => {\n            this.hander()\n        });\n    }\n\n    setChoice2 = () => {\n        this.props.selected();\n        this.setState({\n            userChoice: this.props.q2\n        }, () => {\n            this.hander()\n        });\n    }\n\n    setChoice3 = () => {\n        this.props.selected();\n        this.setState({\n            userChoice: this.props.q3\n        }, () => {\n            this.hander()\n        });\n    }\n\n\n    render(){\n        return (\n            <div className={this.props.questionDisplay ? '' : 'hidden'}>\n                <button onClick={this.setChoice1}>Question A {this.props.q1.question}</button>\n                <button onClick={this.setChoice2}>Question B {this.props.q2.question}</button>\n                <button onClick={this.setChoice3}>Question C {this.props.q3.question}</button>\n            </div>\n        )\n    }\n\n}\n\nexport default Ask;","import React from 'react';\n\nconst Result = (props) => {\n\n    const { resultDisplay, newsValue, interest } = props;\n\n    let trumpResult = '';\n\n    let bossResult = '';\n\n    if (interest === 0) {trumpResult = `Never ever enter my white house again! LEAVE! you FAKE media!`}\n    else if (interest < 3) { trumpResult = `You are the enemy of the people, I will not invite you again` }\n    else if (interest < 4) { trumpResult = `I don't like your reporting, it's kinda fake` }\n    else if (interest < 5) { trumpResult = `Can you leave now? I need to go golfing right away` }\n    else if (interest < 7) { trumpResult = `I like your questions, but I like my FOX news friends better` }\n    else if (interest < 9) { trumpResult = `Such a great time, let me put your reporting on my twitter` }\n    else if (interest < 10) { trumpResult = `We both are stable genius! Here is my number, call me maybe` }\n    \n\n    if (newsValue > 10) { bossResult = `Such a bombshell! Amazing Interview! I'm giving you a raise!`} \n    else if (newsValue > 8) { bossResult = 'Great job! Better than I expected, headline material!'}\n    else if (newsValue > 7) { bossResult = 'Good effort, now we had some useful information to work on'}\n    else if (newsValue > 6) { bossResult = `Not good, I was expecting a bombshell, you didn't deliver`}\n    else if (newsValue > 5) { bossResult = `I'm not impressed, how can we report these shit?`}\n    else { bossResult = `This interview was hopeless and pointless, You are sacked!`}\n\n\n\n\n    return (\n        <div className={resultDisplay ? '' : 'hidden'}>\n            <h2>Great Interview</h2>\n            <div className=\"trumpResult\">\n                {trumpResult}\n            </div>\n            <div className=\"bossResult\">\n                {bossResult}\n            </div>\n        </div>\n    )\n\n    \n}\n\nexport default Result;","import React from 'react';\nimport trump0 from './image/trump0.gif';\nimport trumpPlus1 from './image/trumpPlus1.gif';\nimport trumpPlus2 from './image/trumpPlus2.gif';\nimport trumpPlus3 from './image/trumpPlus3.gif';\nimport trumpMinus1 from './image/trumpMinus1.gif';\nimport trumpMinus2 from './image/trumpMinus2.gif';\nimport trumpMinus3 from './image/trumpMinus3.gif';\n\nconst Status = (props) => {\n\n    const {interest, interestChange} = props;\n\n    let level = interest*10;\n\n    let trumpSrc = trump0;\n\n    if (interestChange === 0) {\n        trumpSrc = trump0\n    } else if (interestChange === -1) {\n        trumpSrc = trumpMinus1\n    } else if (interestChange === -2) {\n        trumpSrc = trumpMinus2\n    } else if (interestChange === -3) {\n        trumpSrc = trumpMinus3\n    } else if (interestChange === 1) {\n        trumpSrc = trumpPlus1\n    } else if (interestChange === 2) {\n        trumpSrc = trumpPlus2\n    } else {\n        trumpSrc = trumpPlus3\n    }\n\n\n        return(\n            <div>\n                <h2>President of United State</h2>\n                <h3>interest</h3>\n                <img src={trumpSrc} alt=\"Trump is laughing\"></img>\n                <div className=\"meter\">\n                    <span style={{width: JSON.stringify(level)+\"%\"}}></span>\n                </div>\n\n            </div>\n        )\n}\n\nexport default Status;","import React from 'react';\n\nconst NewsValue = (props) => {\n\n    const {newsValue} = props;\n\n    let level = newsValue*8;\n\n        return(\n            <div>\n                <h3>News Value</h3>\n                <div className=\"meter\">\n                    <span style={{width: JSON.stringify(level)+\"%\"}}></span>\n                </div>\n\n            </div>\n        )\n}\n\nexport default NewsValue;","import React, { Component } from 'react';\n\nclass Intro extends Component{\n    constructor() {\n        super();\n        this.state = {\n            hidden: false\n        }\n    }\n\n\n\n    hideIt = () => {\n        this.setState({hidden:true})\n    }\n\n    render() {\n        return (\n            <div className={this.state.hidden ? 'hidden' : ''}>\n                <div>\n                    <div className={'closeToggle'} onClick={this.hideIt}>x</div>\n                    <div className={'introText'}>\n                        <h1>How to play</h1>\n                        <p>Welcome! You will be playing as a Journalist in this game, and you've given a precious chance to interview the president of United State; Donald J. Trump. We provide you a series of interview questions during the game, all you need to do is to select the choice. However, there are two major factors you need to consider before starting the interview. First, keep you eyes on the president, if you keep asking questions that he's not interested, he could ask to leave at any moment. Also, you shouldn't let him be too comfortable either, some questions may look unpleasant but bring tremendous news value to our news agency. Remember, your boss is watching!</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Intro;","import React, { Component } from 'react';\nimport firebase from './firebase';\nimport axios from 'axios';\nimport Dialog from './dialog';\nimport './App.css';\nimport Ask from './ask';\nimport Result from './result';\nimport Status from './status';\nimport NewsValue from './newsValue';\nimport Intro from './intro'\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      allQuestions: [],\n      questionList: [],\n      askedQuestion: [],\n      round: 0,\n      question1: '',\n      question2: '',\n      question3: '',\n      interest: 5,\n      interestChange: 0,\n      newsValue: 0,\n      questionDisplay: true,\n      resultDisplay: false\n    }\n  }\n\n  //create a function that pick a question randomly from question list(state), save it as a var, also remove it from the question list(state)\n\n  componentDidMount() {\n\n    const dbRef = firebase.database().ref();\n    dbRef.on('value', (response) => {\n      // console.log(response.val().choice[0].question);\n      const whateverList = response.val().choice;\n\n      // console.log(whateverList);\n\n      this.setState({allQuestions: whateverList});\n\n      console.log(this.state.allQuestions);\n\n      // console.log(this.state.allQuestions.choice.id0.question);\n\n      const shuffledList = [];\n      for (let i = 0; i < 18; i++) {\n        const x = Math.floor(Math.random() * this.state.allQuestions.length);\n        shuffledList.push(this.state.allQuestions[x]);\n        this.state.allQuestions.splice(x, 1);\n      }\n      this.setState({ questionList: shuffledList });\n      console.log(this.state.questionList)\n\n      this.apiToText();\n\n      this.questionDisplay();\n      // console.log(this.state.question3)\n\n    })\n\n\n\n    \n\n    // axios({\n    //   url: 'http://proxy.hackeryou.com',\n    //   dataType: 'json',\n    //   method: 'GET',\n    //   params: {\n    //     reqUrl: 'https://api.tronalddump.io/tag/Hillary%20Clinton',\n    //     xmlToJSON: false\n    //   }\n    // }).then(function (res) {\n    //   const dog = res.data._embedded.tags[0].value;\n    //   console.log(dog)\n    // });\n\n  }\n\n  componentDidUpdate() {\n\n  //   if (this.state.askedQuestion.length > 0) {\n  //       this.state.askedQuestion.forEach( (i) => {\n  //         if(i.api !== 0){\n            \n            // () => {\n            //   axios({\n            //     url: 'http://proxy.hackeryou.com',\n            //     dataType: 'json',\n            //     method: 'GET',\n            //     params: {\n            //       reqUrl: 'https://api.tronalddump.io/tag/' + i.api,\n            //       xmlToJSON: false\n            //     }\n            //   }).then(function (res) {\n            //     i.interest = res.data._embedded.tags[0].value\n            //   });\n  //       // }\n        \n  //     }\n  //   }\n  // }\n\n    // (solved) cannot force re-render after api call's been made, the trumptalk display always renders before the api call, trumptalk can only display correctly after another question button being clicked\n    \n\n    // if (this.state.askedQuestion.length > 0){\n    //   this.state.askedQuestion.forEach(\n    //     (i) => {\n    //       if(i.api !==0){\n    //           axios({\n    //             url: 'http://proxy.hackeryou.com',\n    //             dataType: 'json',\n    //             method: 'GET',\n    //             params: {\n    //               reqUrl: 'https://api.tronalddump.io/tag/' + i.api,\n    //               xmlToJSON: false\n    //             }\n    //           }).then(function (res) {\n    //             i.trumpTalk = res.data._embedded.tags[0].value;\n    //           })\n    //       }\n    //     }\n    //   )\n    // }\n\n}\n\n \n\n  // displayOrNot = () => {\n  //   if (this.state.round === 1) {\n  //     this.setState({ display: false },()=>{\n  //       console.log(this.state.display)\n  //     });\n  //   }\n  // }\n\n\n\n  // randomQuestion = () => {\n  //   // const random = Math.floor(Math.random() * this.state.allQuestions.length);\n  //   // const first = this.state.allQuestions[random];\n  //   // const shuffled = this.state.allQuestions.sort(() => 0.5 - Math.random());\n  //   // let shuffledList = shuffled.slice(0, 8);\n  //   //push it to the questionList array\n  //   // remove this question from the allQuestions\n  //   const shuffledList = [];\n  //   for (let i = 0; i < 3; i++) {\n  //     const x = Math.floor(Math.random() * this.state.allQuestions.length);\n  //     shuffledList.push(this.state.allQuestions[x]);\n  //     this.state.allQuestions.splice(x, 1);\n  //   }\n  //   this.setState({questionList: shuffledList});\n  //   console.log(this.state.questionList)\n  // }\n\n  apiToText = () => {\n    this.state.questionList.forEach(\n      (i) => {\n        if (i.api !== 0) {\n          axios({\n            url: 'http://proxy.hackeryou.com',\n            dataType: 'json',\n            method: 'GET',\n            params: {\n              reqUrl: 'https://api.tronalddump.io/tag/' + i.api,\n              xmlToJSON: false\n            }\n          }).then(function (res) {\n            i.trumpTalk = res.data._embedded.tags[0].value;\n          })\n        }\n      }\n    )\n  }\n\n  displayOrNot = () => {\n    if (this.state.round === 5 || this.state.interest <= 0) {\n      this.setState({\n        questionDisplay: false,\n        resultDisplay: true\n      });\n      console.log('downdowndown')\n    }\n  }\n\n  questionDisplay = () => {\n    this.setState({ question1: this.state.questionList[this.state.round * 3], question2: this.state.questionList[this.state.round * 3 + 1], question3: this.state.questionList[this.state.round * 3 + 2]})\n  }\n\n  questionSelected = () => {\n    this.setState({ round: this.state.round + 1 },() =>{\n    this.questionDisplay();\n    console.log('current round:', this.state.round)\n    });\n  }\n\n  updateAskedHandler = (q) => {\n    this.setState({ askedQuestion: [...this.state.askedQuestion, q] }, () => {\n      // console.log(this.state.askedQuestion)\n    });\n  }\n\n  updateInterestHandler = (i) => {\n    this.setState({ interest: this.state.interest + i }, () => {\n      if (this.state.interest < 0) {\n        this.setState({ interest: 0 })\n      }\n      this.displayOrNot();\n      console.log('interest'+this.state.interest)\n    });\n  }\n\n  interestChangeHandler = (ic) => {\n    this.setState({ interestChange: ic });\n  }\n\n  newsValueHandler = (n) => {\n    this.setState({ newsValue: this.state.newsValue + n }, () => {\n      console.log('newsvalue'+this.state.newsValue)\n    });\n  }\n\n  resultDisplayHandler = (r) => {\n    this.setState({ resultDisplay: r });\n  }\n\n\n  // stopInterview = () => {\n  //   if (this.state.round === 1) {\n  //     console.log('555')\n  //   }\n  // }\n\n  // this.state.askedQuestion.push(q) \\/\n  // when user selected a question, save it into asked question array \\/\n  // display the question in dialog section \\/\n  // get api response refer to the askedquestion \\/\n  // display the api quote on the page \\/\n  // change state.interest value refer to the askedquestion \\/\n  // change newsValue value refer to the askedquestion \\/\n  // update firebase json file \\/\n  // show trump reaction meme on status bar \\/\n  // show result panel after question hidden, show news value & trump interest \\/\n  // display an intro\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Intro />\n        <Status interest={this.state.interest} interestChange={this.state.interestChange}/>\n        <Dialog askedQuestion={this.state.askedQuestion}/>\n        <NewsValue newsValue={this.state.newsValue}/>\n        <Ask q1={this.state.question1} q2={this.state.question2} q3={this.state.question3} handler={this.updateAskedHandler} interestHandler={this.updateInterestHandler} interestChangeHandler={this.interestChangeHandler} newsValueHandler={this.newsValueHandler} interest={this.state.interest} selected={this.questionSelected} round={this.state.round} resultDisplayHandler={this.resultDisplayHandler} questionDisplay={this.state.questionDisplay}/>\n        <Result resultDisplay={this.state.resultDisplay} newsValue={this.state.newsValue} interest={this.state.interest}/>\n        {/* <button onClick={this.questionSelected}>Question A {this.state.question1.question}</button>\n        <button onClick={this.questionSelected}>Question B {this.state.question2.question}</button>\n        <button onClick={this.questionSelected}>Question C {this.state.question3.question}</button> */}\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/trump0.b7139b39.gif\";"],"sourceRoot":""}